name: CI_CD

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        working-directory: functions
        run: |
          npm install
      - name: Load FIREBASE Config
        working-directory: functions
        run: |
            echo '{}' | jq --arg type '${{ secrets.FIREBASE_TYPE }}' --arg project_id '${{ secrets.FIREBASE_PROJECT_ID }}' --arg private_key_id '${{ secrets.FIREBASE_PRIVATE_KEY_ID }}' --arg private_key '${{ secrets.FIREBASE_PRIVATE_KEY }}' --arg client_email '${{ secrets.FIREBASE_CLIENT_EMAIL }}' --arg client_id '${{ secrets.FIREBASE_CLIENT_ID }}' --arg auth_uri '${{ secrets.FIREBASE_AUTH_URI }}' --arg token_uri '${{ secrets.FIREBASE_TOKEN_URI }}' --arg auth_provider_x509_cert_url '${{ secrets.FIREBASE_AUTH_PROVIDER_X509_CERT_URL }}' --arg client_x509_cert_url '${{ secrets.FIREBASE_CLIENT_X509_CERT_URL }}' '{ type: $type, project_id: $project_id, private_key_id: $private_key_id, private_key: $private_key, client_email: $client_email, client_id: $client_id, auth_uri: $auth_uri, token_uri: $token_uri, auth_provider_x509_cert_url: $auth_provider_x509_cert_url, client_x509_cert_url: $client_x509_cert_url }' > ./config/devConfig.json
      - name: Deploy
        if: github.ref == 'refs/heads/master'
        run: npm run deploy
